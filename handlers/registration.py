from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from database.db import get_connection
from keyboards.menu import get_main_keyboard
from config import REQUIRED_CHAT_ID

router = Router()

class Registration(StatesGroup):
    enter_nickname = State()
    select_system = State()

#–î–ª—è –¥–æ–±—ã—á—ã id —á–∞—Ç–∞
#@router.message()
#async def debug_chat_id(message: Message):
#    await message.answer(f"Chat ID: <code>{message.chat.id}</code>", parse_mode="HTML")

@router.message(F.text == "/start")
async def start_registration(message: Message, state: FSMContext):
    user_id = message.from_user.id

    # üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–ª–µ–Ω—Å—Ç–≤–æ –≤ —á–∞—Ç–µ
    try:
        chat_member = await message.bot.get_chat_member(REQUIRED_CHAT_ID, user_id)
        print(f"DEBUG: User {user_id} status in chat {REQUIRED_CHAT_ID}: {chat_member.status}")
        if chat_member.status in ("left", "kicked"):
            raise ValueError("Not in group")
    except Exception as e:
        print(f"DEBUG: Error checking chat membership: {e}")
        await message.answer(
            "‚ùå –ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, –≤—Å—Ç—É–ø–∏ –≤ –Ω–∞—à —á–∞—Ç:\n"
            "üëâ https://t.me/+R3Bjy51_7admMDY6",
            reply_markup=ReplyKeyboardRemove()
        )
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    with get_connection() as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT nickname, system FROM users WHERE user_id = ?", (user_id,))
        row = cursor.fetchone()

    if row:
        nickname, system = row
        await message.answer(
            f"üëã –¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!\n\n"
            f"üë§ –ù–∏–∫–Ω–µ–π–º: {nickname}\n"
            f"üõ†Ô∏è –°–∏—Å—Ç–µ–º–∞: {system}",
            reply_markup=get_main_keyboard()
        )
        return

    # –ï—Å–ª–∏ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω ‚Äî –Ω–∞—á–∏–Ω–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –ù–∞–∑–æ–≤–∏ —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º / OSD:")
    await state.set_state(Registration.enter_nickname)

@router.message(Registration.enter_nickname)
async def process_nickname(message: Message, state: FSMContext):
    await state.update_data(nickname=message.text)
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="HDZero"), KeyboardButton(text="–ê–Ω–∞–ª–æ–≥")],
            [KeyboardButton(text="DJI"), KeyboardButton(text="WS")]
        ],
        resize_keyboard=True
    )
    await message.answer("üöÅ –í—ã–±–µ—Ä–∏ —Å–∏—Å—Ç–µ–º—É, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π —Ç—ã –ª–µ—Ç–∞–µ—à—å:", reply_markup=keyboard)
    await state.set_state(Registration.select_system)

@router.message(Registration.select_system)
async def finish_registration(message: Message, state: FSMContext):
    data = await state.update_data(system=message.text)
    await state.clear()

    user_id = message.from_user.id
    nickname = data["nickname"]
    system = data["system"]

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
    with get_connection() as conn:
        cursor = conn.cursor()
        cursor.execute(
            "INSERT OR REPLACE INTO users (user_id, nickname, system) VALUES (?, ?, ?)",
            (user_id, nickname, system)
        )
        conn.commit()

    await message.answer(
        f"‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n"
        f"üë§ –ù–∏–∫–Ω–µ–π–º: {nickname}\n"
        f"üõ†Ô∏è –°–∏—Å—Ç–µ–º–∞: {system}",
        reply_markup=get_main_keyboard()
    )
    welcome_message = (
    "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤–æ –í—É–ø–ö–ª—É–± –ö–∞–∑–∞–Ω—å!\n\n"
    "üèÅ –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å:\n"
    "‚Ä¢ üóì –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É\n"
    "‚Ä¢ üéü –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–µ—Å—Ç–æ\n"
    "‚Ä¢ üë• –í—Å—Ç—Ä–µ—Ç–∏—Ç—å –¥—Ä—É–≥–∏—Ö –ø–∏–ª–æ—Ç–æ–≤\n"
    "‚Ä¢ üöÅ –û—Ç—Ç–æ—á–∏—Ç—å –Ω–∞–≤—ã–∫–∏ –≤—É–ø-—Ä–µ–π—Å–∏–Ω–≥–∞\n\n"
    "üìç –ì–¥–µ –ø—Ä–æ—Ö–æ–¥—è—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏?\n"
    "üè¢ –¶–µ–Ω—Ç—Ä ¬´–°–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ¬ª\n"
    "üìç –ê–¥—Ä–µ—Å: –ø—Ä–æ—Å–ø–µ–∫—Ç –ë—É—Ä—Ö–∞–Ω–∞ –®–∞—Ö–∏–¥–∏, –¥.17\n"
    "üó∫ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø—Ä–æ—Ö–æ–¥—É ‚Äî –≤ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–º –≤–∏–¥–µ–æ\n"
    "üó∫ <a href='https://yandex.ru/maps/-/CLeIZMm9'>–û—Ç–∫—Ä—ã—Ç—å –≤ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞—Ö</a>\n\n"
    "üïò –ö–æ–≥–¥–∞ –º—ã –ª–µ—Ç–∞–µ–º?\n"
    "üìÖ –ö–∞–∂–¥—ã–π –≤—Ç–æ—Ä–Ω–∏–∫ 19:00‚Äì21:00\n"
    "üìÖ –ö–∞–∂–¥—ã–π —á–µ—Ç–≤–µ—Ä–≥ 18:00‚Äì20:00\n"
    "üëâ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ –∫–Ω–æ–ø–∫–µ <b>¬´–ó–∞–ø–∏—Å–∞—Ç—å—Å—è¬ª</b> –≤ –º–µ–Ω—é.\n\n"
    "üëü –í–∞–∂–Ω–æ: –∫–æ–≤–µ—Ä –Ω–∞ –ø–æ–ª—É ‚Üí —Å–º–µ–Ω–∫–∞ –Ω–µ –Ω—É–∂–Ω–∞.\n"
    "ü™ë –î–ª—è —É–¥–æ–±—Å—Ç–≤–∞ ‚Äî —Å—Ç–æ–ª—ã –∏ —Å—Ç—É–ª—å—è –µ—Å—Ç—å!\n\n"
    "‚ö°Ô∏è –ï—Å—Ç—å –º–Ω–æ–≥–æ —É–¥–ª–∏–Ω–∏—Ç–µ–ª–µ–π, —Ä–æ–∑–µ—Ç–æ–∫ —Ç–æ—á–Ω–æ —Ö–≤–∞—Ç–∏—Ç\n\n"
    "‚ö° –†–µ–≥–ª–∞–º–µ–Ω—Ç:\n"
    "‚Ä¢ 1S –≤—É–ø—ã 65‚Äì75 –º–º\n"
    "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Walksnail, Analog, HDZero\n"
)

    await message.answer(welcome_message, parse_mode="HTML")