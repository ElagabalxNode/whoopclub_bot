from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import (
    Message, CallbackQuery,
    InlineKeyboardMarkup, InlineKeyboardButton,
    ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
)
from database.db import get_connection
from keyboards.menu import get_main_keyboard

router = Router()

class EditProfile(StatesGroup):
    nickname = State()
    system = State()

@router.message(F.text == "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
async def show_profile(message: Message):
    user_id = message.from_user.id
    with get_connection() as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT nickname, system, subscription FROM users WHERE user_id = ?", (user_id,))
        user = cursor.fetchone()

    if user:
        nickname, system, subscription = user
        profile_text = (
            f"üë§ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å</b>\n"
            f"üéÆ OSD: <b>{nickname or '-'}</b>\n"
            f"üé• –í–∏–¥–µ–æ: <b>{system or '-'}</b>\n"
            f"üéü –û—Å—Ç–∞—Ç–æ–∫ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞: <b>{subscription or 0}</b> —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫"
        )
    else:
        profile_text = "–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω."

    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="edit_profile")]
    ])

    await message.answer(profile_text, reply_markup=kb)

@router.callback_query(F.data == "edit_profile")
async def handle_edit_button(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π OSD / –Ω–∏–∫–Ω–µ–π–º:")
    await state.set_state(EditProfile.nickname)

@router.message(EditProfile.nickname)
async def process_nickname(message: Message, state: FSMContext):
    await state.update_data(nickname=message.text)

    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="HDZero"), KeyboardButton(text="–ê–Ω–∞–ª–æ–≥")],
            [KeyboardButton(text="DJI"), KeyboardButton(text="WS")]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    await message.answer("üöÅ –í—ã–±–µ—Ä–∏ —Å–∏—Å—Ç–µ–º—É, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π —Ç—ã –ª–µ—Ç–∞–µ—à—å:", reply_markup=keyboard)
    await state.set_state(EditProfile.system)

@router.message(EditProfile.system)
async def process_system(message: Message, state: FSMContext):
    data = await state.get_data()
    nickname = data.get("nickname")
    system = message.text
    user_id = message.from_user.id

    with get_connection() as conn:
        cursor = conn.cursor()
        cursor.execute("""
            INSERT INTO users (user_id, nickname, system)
            VALUES (?, ?, ?)
            ON CONFLICT(user_id) DO UPDATE SET nickname=excluded.nickname, system=excluded.system
        """, (user_id, nickname, system))
        conn.commit()

    await message.answer("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω.", reply_markup=get_main_keyboard())
    await state.clear()
